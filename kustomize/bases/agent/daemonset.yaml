---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: observe-agent
spec:
  selector:
    matchLabels:
      name: observe-agent
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: observe-agent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/api/v1/metrics/prometheus"
        prometheus.io/port: "2020"
    spec:
      tolerations:
        - operator: Exists
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - {key: observeinc.com/unschedulable, operator: DoesNotExist}
      terminationGracePeriodSeconds: 15
      containers:
        - name: telegraf
          image: telegraf
          livenessProbe:
            httpGet:
              path: /
              port: 8888
            timeoutSeconds: 5
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8888
          env:
            - name: NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OBSERVE_TOKEN
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: token
            - name: OBSERVE_CUSTOMER
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: customer
            - name: OBSERVE_CLUSTER
              valueFrom:
                configMapKeyRef:
                  name: cluster-info
                  key: id
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          volumeMounts:
            - name: config
              mountPath: /etc/telegraf
        - name: fluent-bit
          image: fluent/fluent-bit
          envFrom:
            - configMapRef:
                name: fluent-bit-env
          env:
            - name: NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OBSERVE_TOKEN
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: token
            - name: OBSERVE_CUSTOMER
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: customer
            - name: OBSERVE_CLUSTER
              valueFrom:
                configMapKeyRef:
                  name: cluster-info
                  key: id
          ports:
            - containerPort: 2020
          command:
            - /fluent-bit/bin/fluent-bit
            - -c
            - /fluent-bit/etc/fluent-bit.conf
          readinessProbe:
            httpGet:
              path: /api/v1/metrics/prometheus
              port: 2020
          livenessProbe:
            httpGet:
              path: /
              port: 2020
            timeoutSeconds: 5
            failureThreshold: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          volumeMounts:
            - name: config
              mountPath: /fluent-bit/etc
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
      volumes:
        - name: config
          projected:
            sources:
              - configMap:
                  name: observe-agent-config
              - configMap:
                  name: observe-agent-overrides
                  optional: true
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
